<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	  <TargetFramework>netstandard2.1</TargetFramework>
	  <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	  <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
	  <Authors>Jens Sels</Authors>
	  <Company>Homebrew IT</Company>
	  <Product>MySql/MariaDB query compiler</Product>
	  <Description>
		  MySQL compiler for Sels.SQL.QueryBuilder. Supports MySQL and MariaDB.

		  Custom expressions:
		  - SELECT FOR UPDATE
		  - INSERT ON DUPLICATE KEY
		  - SELECT LIMIT
		  - RECURSIVE Cte
		  - MariaDB RETURNING
		  - NOW, UTC_TIMESTAMP, DATE_ADD, CONCACT functions

		  Start creating queries using one of the following static helper methods:
		  - Sels.SQL.QueryBuilder.MySQL.MySql.Insert();
		  - Sels.SQL.QueryBuilder.MySQL.MySql.Update();
		  - Sels.SQL.QueryBuilder.MySQL.MySql.Delete();
		  - Sels.SQL.QueryBuilder.MySQL.MySql.Select();
		  - Sels.SQL.QueryBuilder.MySQL.MySql.With();
		  - Sels.SQL.QueryBuilder.MySQL.MySql.If();
		  - Sels.SQL.QueryBuilder.MySQL.MySql.Set();

		  Use IServiceCollection.AddMySqlQueryProvider() or IServiceCollection.AddCachedMySqlQueryProvider to inject ISqlQueryProvider or ICachedSqlQueryProvider to start building MySQL queries.
	  </Description>
	  <PackageProjectUrl>https://github.com/Jenssels1998/Sels.Core</PackageProjectUrl>
	  <Copyright>Jens Sels</Copyright>
	  <PackageTags>Sels;SQL;Query;QueryBuilder;Fluent;Expression;MySql;MariaDB</PackageTags>
	  <RepositoryUrl>https://github.com/Jenssels1998/Sels.Core</RepositoryUrl>
	  <!--For NuGet package-->
	  <VersionPrefix>1.0.0</VersionPrefix>
	  <BuildNumber Condition="'$(BUILD_NUMBER)' == ''">dev</BuildNumber>
	  <BuildNumber Condition="'$(BUILD_NUMBER)' != ''">$([System.String]::Format('{0:000000}', $([System.Int32]::Parse($(BUILD_NUMBER)))))</BuildNumber>
	  <VersionSuffix Condition="'$(Configuration)' == 'Debug'">beta-$(BuildNumber)</VersionSuffix>
	  <DocumentationFile>bin/$(Configuration)/$(TargetFramework)/$(MSBuildProjectName).xml</DocumentationFile>
	  <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>


	<!--Exclude pdb files from release build-->
	<PropertyGroup Condition="'$(Configuration)' == 'Release'">
		<DebugType>None</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<!--Include non-NuGet package projects in NuGet package-->
	<Target Name="PrePackage" BeforeTargets="BuildPackage">
		<PropertyGroup>
			<BuildCommand>$(BuildCommand) -IncludeReferencedProjects</BuildCommand>
		</PropertyGroup>
	</Target>

	<!--Clear local versions if already added and add NuGet package to local repository-->
	<Target Name="NuGetPushToLocal" AfterTargets="Pack" Condition="'$(OS)' == 'Windows_NT' And Exists('C:\NuGet\nuget.exe')">
		<Exec Command="if exist %USERPROFILE%\.nuget\packages\$(PackageId) rmdir /s /q %USERPROFILE%\.nuget\packages\$(PackageId)" />
		<Exec Command="if exist C:\NuGet\$(PackageId) rmdir /s /q C:\NuGet\$(PackageId)" />
		<Exec Command="C:\NuGet\nuget.exe add $(ProjectDir)bin\$(Configuration)\$(PackageId).$(PackageVersion).nupkg -Source C:\NuGet -Verbosity Detailed" />
	</Target>


	<ItemGroup>
    <ProjectReference Include="..\..\..\Validation\Sels.ObjectValidationFramework\Sels.ObjectValidationFramework.csproj" />
    <ProjectReference Include="..\Sels.SQL.QueryBuilder\Sels.SQL.QueryBuilder.csproj" />
  </ItemGroup>


	<ItemGroup>
	  <Folder Include="Statements\" />
	</ItemGroup>

</Project>
