<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.1</TargetFramework>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<Authors>Jens Sels</Authors>
		<Company>Homebrew IT</Company>
		<Product>Service builder Library</Product>
		<Description>
			For building services that can be injected as dependencies using the microsoft DI framework.
			Fluent builder syntax and wrapper around Caste.Core interceptors.
			Used by projects maintained here: https://github.com/Jenssels1998
		</Description>
		<PackageProjectUrl>https://github.com/Jenssels1998/Sels.Core</PackageProjectUrl>
		<Copyright>Jens Sels</Copyright>
		<PackageTags>Sels;FluentBuilder;DependencyInjection;Decorator;Interceptor;Tracing;Caching;Dispose</PackageTags>
		<RepositoryUrl>https://github.com/Jenssels1998/Sels.Core</RepositoryUrl>
		<!--For NuGet package-->
		<VersionPrefix>2.0.0</VersionPrefix>
		<BuildNumber Condition="'$(BUILD_NUMBER)' == ''">dev</BuildNumber>
		<BuildNumber Condition="'$(BUILD_NUMBER)' != ''">$([System.String]::Format('{0:000000}', $([System.Int32]::Parse($(BUILD_NUMBER)))))</BuildNumber>
		<VersionSuffix Condition="'$(Configuration)' == 'Debug'">beta-$(BuildNumber)</VersionSuffix>
		<DocumentationFile>bin/$(Configuration)/$(TargetFramework)/$(MSBuildProjectName).xml</DocumentationFile>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
	</PropertyGroup>

	<!--Exclude pdb files from release build-->
	<PropertyGroup Condition="'$(Configuration)' == 'Release'">
		<DebugType>None</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<!--Include non-NuGet package projects in NuGet package-->
	<Target Name="PrePackage" BeforeTargets="BuildPackage">
		<PropertyGroup>
			<BuildCommand>$(BuildCommand) -IncludeReferencedProjects</BuildCommand>
		</PropertyGroup>
	</Target>

	<!--Clear local versions if already added and add NuGet package to local repository-->
	<Target Name="NuGetPushToLocal" AfterTargets="Pack" Condition="'$(OS)' == 'Windows_NT' And Exists('C:\NuGet\nuget.exe')">
		<Exec Command="if exist %USERPROFILE%\.nuget\packages\$(PackageId) rmdir /s /q %USERPROFILE%\.nuget\packages\$(PackageId)" />
		<Exec Command="if exist C:\NuGet\$(PackageId) rmdir /s /q C:\NuGet\$(PackageId)" />
		<Exec Command="C:\NuGet\nuget.exe add $(ProjectDir)bin\$(Configuration)\$(PackageId).$(PackageVersion).nupkg -Source C:\NuGet -Verbosity Detailed" />
	</Target>

	<ItemGroup>
		<PackageReference Include="Castle.Core.AsyncInterceptor" Version="2.1.0" />
		<PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="6.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Sels.Core.Conversion\Sels.Core.Conversion.csproj" />
	</ItemGroup>


</Project>
